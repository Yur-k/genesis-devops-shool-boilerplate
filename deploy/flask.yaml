apiVersion: v1
kind: Service
metadata:
  name: flask-service
  namespace: flask-app
spec:
  selector:
    app: flask-deploy
  ports:
  - protocol: TCP
    port: 5000
    targetPort: flask

    
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: flask-deploy
  namespace: flask-app
  labels:
    app: flask-app
spec:
  replicas: 3
  selector:
    matchLabels:
      app: flask-app
  template:
    metadata:
      labels:
        app: flask-app
    spec:
      containers:
      - name: flask-app
        image: yurcall/flask-api:latest
        command: ["python"]
        args: ["-m", "flask", "run"]
        env:
          - name: FLASK_APP
            value: api.py
          - name: FLASK_ENV
            value: development
          - name: DB_USERNAME
            valueFrom:
              configMapKeyRef:
                name: mysql-config
                key: db-user
          - name: DB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: mysql-secret
                key: mysql-password
          - name: DB_NAME
            valueFrom:
              configMapKeyRef:
                name: mysql-config
                key: database
          - name: DB_HOSTNAME
            value: mysql
        ports:
        - containerPort: 5000
          name: flask
        resources:
          limits:
            memory: "256Mi"
            cpu: "300m"
          requests:
            memory: "256Mi"
            cpu: "200m"
        startupProbe:
          httpGet:
            path: /api/health-check/ok
            port: flask
          failureThreshold: 5
          periodSeconds: 5
        readinessProbe:
          httpGet:
            path: /api/health-check/ok
            port: flask
          failureThreshold: 5
          periodSeconds: 5